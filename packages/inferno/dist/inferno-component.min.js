!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.InfernoComponent=e()}(this,function(){"use strict";function t(t){return n(t)||e(t)}function e(t){return null===t}function n(t){return void 0===t}function o(t){throw t||(t=h),new Error("Inferno Error: "+t)}function i(){return{dom:null,type:l.PLACEHOLDER}}function r(t,e,n){var o=_.get(t);o||(o=[],_.set(t,o),requestAnimationFrame(function(){c(t,e,function(){for(var t=0;t<o.length;t++)o[t]()}),_.delete(t),t._processingSetState=!1})),n&&o.push(n)}function s(){return document.activeElement}function p(t){t!==document.body&&document.activeElement!==t&&t.focus()}function u(t,e,n){for(var o in e)t._pendingState[o]=e[o];t._pendingSetState?(t.state=Object.assign({},t.state,t._pendingState),t._pendingState={}):(t._pendingSetState=!0,t._processingSetState||n?r(t,!1,n):(t._processingSetState=!0,c(t,!1,n),t._processingSetState=!1))}function c(e,n,o){if((!e._deferSetState||n)&&!e._blockRender){e._pendingSetState=!1;var r=e._pendingState,u=e.state,c=Object.assign({},u,r),h=e.props,l=e.context;e._pendingState={};var f=e._updateComponent(u,c,h,h,l,n);f===d?f=e._lastInput:t(f)&&(f=i());var _=e._lastInput,m=_.dom.parentNode,S=s(),g=new a,E=e.getChildContext();E=t(E)?Object.assign({},l,e._childContext):Object.assign({},l,e._childContext,E),e._lastInput=f,e._patch(_,f,m,g,E,e._isSVG,!1),e._vComponent.dom=f.dom,e._componentToDOMNodeMap.set(e,f.dom),e.componentDidUpdate(h,u),g.trigger(),t(o)||o(),p(S)}}var a=function(){this._listeners=[]};a.prototype.addListener=function(t){this._listeners.push(t)},a.prototype.trigger=function(){for(var t=this,e=0;e<this._listeners.length;e++)t._listeners[e]()};var d="$NO_OP",h="a runtime error occured! Use Inferno in development environment to find the error.",l={ELEMENT:1,OPT_ELEMENT:2,TEXT:3,FRAGMENT:4,OPT_BLUEPRINT:5,COMPONENT:6,PLACEHOLDER:7},f="Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.",_=new Map,m=function(t,e){this.props=t||{},this.state={},this.refs={},this._processingSetState=!1,this._blockRender=!1,this._blockSetState=!1,this._deferSetState=!1,this._pendingSetState=!1,this._pendingState={},this._lastInput=null,this._vComponent=null,this._unmounted=!0,this.context=e||{},this._childContext=null,this._patch=null,this._isSVG=!1,this._componentToDOMNodeMap=null,this.componentDidMount||(this.componentDidMount=null)};return m.prototype.render=function(){},m.prototype.forceUpdate=function(t){if(this._unmounted)throw Error(f);c(this,!0,t)},m.prototype.setState=function(t,e){if(this._unmounted)throw Error(f);this._blockSetState===!1?u(this,t,e):o()},m.prototype.componentWillMount=function(){},m.prototype.componentWillUnmount=function(){},m.prototype.componentDidUpdate=function(){},m.prototype.shouldComponentUpdate=function(){return!0},m.prototype.componentWillReceiveProps=function(){},m.prototype.componentWillUpdate=function(){},m.prototype.getChildContext=function(){},m.prototype._updateComponent=function(e,n,o,i,r,s){if(this._unmounted===!0)throw new Error("You can't update an unmounted component!");if(!t(i)&&t(i.children)&&(i.children=o.children),o!==i||e!==n||s){o!==i&&(this._blockRender=!0,this.componentWillReceiveProps(i,r),this._blockRender=!1,this._pendingSetState&&(n=Object.assign({},n,this._pendingState),this._pendingSetState=!1,this._pendingState={}));var p=this.shouldComponentUpdate(i,n,r);if(p!==!1||s)return this._blockSetState=!0,this.componentWillUpdate(i,n,r),this._blockSetState=!1,this.props=i,this.state=n,this.context=r,this.render()}return d},m});