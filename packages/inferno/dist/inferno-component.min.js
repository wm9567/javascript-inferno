!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.InfernoComponent=e()}(this,function(){"use strict";function t(t){return n(t)||e(t)}function e(t){return null===t}function n(t){return void 0===t}function o(t){throw t||(t=c),new Error("Inferno Error: "+t)}function i(t,e,n){t.split(",").forEach(function(t){return e[t]=n})}function r(){return{dom:null,type:y.PLACEHOLDER}}function p(){return document.activeElement}function s(t){t!==document.body&&document.activeElement!==t&&t.focus()}function a(t,e,n){for(var o in e)t._pendingState[o]=e[o];t._pendingSetState?(t.state=Object.assign({},t.state,t._pendingState),t._pendingState={}):(t._pendingSetState=!0,l(t,!1,n))}function l(e,n,o){if((!e._deferSetState||n)&&!e._blockRender){e._pendingSetState=!1;var i=e._pendingState,a=e.state,l=Object.assign({},a,i),c=e.props;e._pendingState={};var h=e._updateComponent(a,l,c,c,n);h===d?h=e._lastInput:t(h)&&(h=r());var f=e._lastInput,m=f.dom.parentNode,_=p(),S=new u;e._patch(f,h,m,S,e.context,e._isSVG,!1),e._lastInput=h,e._vComponent.dom=h.dom,e._componentToDOMNodeMap.set(e,h.dom),e.componentDidUpdate(c,a),S.trigger(),t(o)||o(),s(_)}}var u=function(){this._listeners=[]};u.prototype.addListener=function(t){this._listeners.push(t)},u.prototype.trigger=function(){for(var t=this,e=0;e<this._listeners.length;e++)t._listeners[e]()};var d="$NO_OP",c="a runtime error occured! Use Inferno in development environment to find the error.",h="http://www.w3.org/1999/xlink",f="http://www.w3.org/XML/1998/namespace",m={},_={},S={},g={};i("xlink:href,xlink:arcrole,xlink:actuate,xlink:role,xlink:titlef,xlink:type",S,h),i("xml:base,xml:lang,xml:space",S,f),i("volume,value",m,!0),i("muted,scoped,loop,open,checked,default,capture,disabled,selected,readonly,multiple,required,autoplay,controls,seamless,reversed,allowfullscreen,novalidate",_,!0),i("animationIterationCount,borderImageOutset,borderImageSlice,borderImageWidth,boxFlex,boxFlexGroup,boxOrdinalGroup,columnCount,flex,flexGrow,flexPositive,flexShrink,flexNegative,flexOrder,gridRow,gridColumn,fontWeight,lineClamp,lineHeight,opacity,order,orphans,tabSize,widows,zIndex,zoom,fillOpacity,floodOpacity,stopOpacity,strokeDasharray,strokeDashoffset,strokeMiterlimit,strokeOpacity,strokeWidth,",g,!0);var y={ELEMENT:1,OPT_ELEMENT:2,TEXT:3,FRAGMENT:4,OPT_BLUEPRINT:5,COMPONENT:6,PLACEHOLDER:7},x="Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.",v=function(t,e){this.props=t||{},this.state={},this.refs={},this._blockRender=!1,this._blockSetState=!1,this._deferSetState=!1,this._pendingSetState=!1,this._pendingState={},this._lastInput=null,this._vComponent=null,this._unmounted=!0,this.context=e||{},this._childContext=null,this._patch=null,this._isSVG=!1,this._componentToDOMNodeMap=null,this.componentDidMount||(this.componentDidMount=null)};return v.prototype.render=function(){},v.prototype.forceUpdate=function(t){if(this._unmounted)throw Error(x);l(this,!0,t)},v.prototype.setState=function(t,e){if(this._unmounted)throw Error(x);this._blockSetState===!1?a(this,t,e):o()},v.prototype.componentWillMount=function(){},v.prototype.componentWillUnmount=function(){},v.prototype.componentDidUpdate=function(){},v.prototype.shouldComponentUpdate=function(){return!0},v.prototype.componentWillReceiveProps=function(){},v.prototype.componentWillUpdate=function(){},v.prototype.getChildContext=function(){},v.prototype._updateComponent=function(e,n,o,i,r){if(this._unmounted===!0)throw new Error("You can't update an unmounted component!");if(!t(i)&&t(i.children)&&(i.children=o.children),o!==i||e!==n||r){o!==i&&(this._blockRender=!0,this.componentWillReceiveProps(i),this._blockRender=!1,this._pendingSetState&&(n=Object.assign({},n,this._pendingState),this._pendingSetState=!1,this._pendingState={}));var p=this.shouldComponentUpdate(i,n);if(p!==!1||r)return this._blockSetState=!0,this.componentWillUpdate(i,n),this._blockSetState=!1,this.props=i,this.state=n,this.render()}return d},v});