!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.InfernoCreateClass=n()}(this,function(){"use strict";function t(t){return e(t)||n(t)}function n(t){return null===t}function e(t){return void 0===t}function o(t){throw t||(t=m),new Error("Inferno Error: "+t)}function i(){return{type:_.PLACEHOLDER,dom:null}}function r(){return document.activeElement}function p(t){t!==document.body&&document.activeElement!==t&&t.focus()}function s(t,n,e){for(var o in n)t._pendingState[o]=n[o];t._pendingSetState?(t.state=Object.assign({},t.state,t._pendingState),t._pendingState={}):(t._pendingSetState=!0,u(t,!1,e))}function u(n,e,o){if((!n._deferSetState||e)&&!n._blockRender){n._pendingSetState=!1;var s=n._pendingState,u=n.state,c=Object.assign({},u,s),a=n.props;n._pendingState={};var d=n._updateComponent(u,c,a,a,e);d===f?d=n._lastInput:t(d)&&(d=i());var l=n._lastInput,m=l.dom.parentNode,_=r(),S=new h;n._patch(l,d,m,S,n.context,n,null),n._lastInput=d,n._vComponent.dom=d.dom,n._componentToDOMNodeMap.set(n,d.dom),n.componentDidUpdate(a,u),S.trigger(),t(o)||o(),p(_)}}function c(){}function a(n,e,o){for(var i in e)o!==!0&&t(e[i])||(n[i]=e[i]);return n}function d(t){for(var n in t){var e=t[n];"function"!=typeof e||e.__bound||g.hasOwnProperty(n)||((t[n]=e.bind(t)).__bound=!0)}}function l(t){function n(n){a(this,t),y.call(this,n),d(this),this.getInitialState&&(this.state=this.getInitialState())}return c.prototype=y.prototype,n.prototype=new c,n.prototype.constructor=n,n.displayName=t.displayName||"Component",n}var h=function(){this._listeners=[]};h.prototype.addListener=function(t){this._listeners.push(t)},h.prototype.trigger=function(){for(var t=this,n=0;n<this._listeners.length;n++)t._listeners[n]()};var f="NO_OP",m="a runtime error occured! Use Inferno in development environment to find the error.",_={ELEMENT:0,COMPONENT:1,TEMPLATE:2,TEXT:3,PLACEHOLDER:4,FRAGMENT:5,VARIABLE:6},S="Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.",y=function(t,n){this.props=t||{},this.state={},this.refs={},this._blockRender=!1,this._blockSetState=!1,this._deferSetState=!1,this._pendingSetState=!1,this._pendingState={},this._lastInput=null,this._vComponent=null,this._unmounted=!0,this.context=n||{},this._patch=null,this._parentComponent=null,this._componentToDOMNodeMap=null,this.componentDidMount||(this.componentDidMount=null)};y.prototype.render=function(){},y.prototype.forceUpdate=function(t){if(this._unmounted)throw Error(S);u(this,!0,t)},y.prototype.setState=function(t,n){if(this._unmounted)throw Error(S);this._blockSetState===!1?s(this,t,n):o()},y.prototype.componentWillMount=function(){},y.prototype.componentWillUnmount=function(){},y.prototype.componentDidUpdate=function(){},y.prototype.shouldComponentUpdate=function(){return!0},y.prototype.componentWillReceiveProps=function(){},y.prototype.componentWillUpdate=function(){},y.prototype.getChildContext=function(){},y.prototype._updateComponent=function(n,e,o,i,r){if(this._unmounted===!0)throw new Error("You can't update an unmounted component!");if(!t(i)&&t(i.children)&&(i.children=o.children),o!==i||n!==e||r){o!==i&&(this._blockRender=!0,this.componentWillReceiveProps(i),this._blockRender=!1,this._pendingSetState&&(e=Object.assign({},e,this._pendingState),this._pendingSetState=!1,this._pendingState={}));var p=this.shouldComponentUpdate(i,e);if(p!==!1||r)return this._blockSetState=!0,this.componentWillUpdate(i,e),this._blockSetState=!1,this.props=i,this.state=e,this.render()}return f};var g={constructor:1,render:1,shouldComponentUpdate:1,componentWillRecieveProps:1,componentWillUpdate:1,componentDidUpdate:1,componentWillMount:1,componentDidMount:1,componentWillUnmount:1,componentDidUnmount:1};return l});