!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.InfernoCreateClass=n()}(this,function(){"use strict";function t(t){return o(t)||e(t)}function n(t){return"function"==typeof t}function e(t){return null===t}function o(t){return void 0===t}function i(t){throw t||(t=_),new Error("Inferno Error: "+t)}function r(){return{dom:null,type:m.PLACEHOLDER}}function p(t,n,e){var o=g.get(t);o||(o=[],g.set(t,o),requestAnimationFrame(function(){u(t,n,function(){for(var t=0;t<o.length;t++)o[t]()}),g.delete(t),t._processingSetState=!1})),e&&o.push(e)}function s(t,e,o){n(e)&&(e=e(t.state));for(var i in e)t._pendingState[i]=e[i];t._pendingSetState?(t.state=Object.assign({},t.state,t._pendingState),t._pendingState={}):(t._pendingSetState=!0,t._processingSetState||o?p(t,!1,o):(t._processingSetState=!0,u(t,!1,o),t._processingSetState=!1))}function u(n,e,o){if((!n._deferSetState||e)&&!n._blockRender){n._pendingSetState=!1;var i=n._pendingState,p=n.state,s=Object.assign({},p,i),u=n.props,a=n.context;n._pendingState={};var c=n._updateComponent(p,s,u,u,a,e);c===f?c=n._lastInput:t(c)&&(c=r());var d=n._lastInput,l=d.dom.parentNode,_=new h,m=n.getChildContext();m=t(m)?Object.assign({},a,n._childContext):Object.assign({},a,n._childContext,m),n._lastInput=c,n._patch(d,c,l,_,m,n._isSVG,!1),n._vComponent.dom=c.dom,n._componentToDOMNodeMap.set(n,c.dom),n.componentDidUpdate(u,p),_.trigger(),t(o)||o()}}function a(){}function c(n,e,o){for(var i in e)o!==!0&&t(e[i])||(n[i]=e[i]);return n}function d(t){for(var n in t){var e=t[n];"function"!=typeof e||e.__bound||v.hasOwnProperty(n)||((t[n]=e.bind(t)).__bound=!0)}}function l(t){function n(n){c(this,t),y.call(this,n),d(this),this.getInitialState&&(this.state=this.getInitialState())}return a.prototype=y.prototype,n.prototype=new a,n.prototype.constructor=n,n.displayName=t.displayName||"Component",n}var h=function(){this._listeners=[]};h.prototype.addListener=function(t){this._listeners.push(t)},h.prototype.trigger=function(){for(var t=this,n=0;n<this._listeners.length;n++)t._listeners[n]()};var f="$NO_OP",_="a runtime error occured! Use Inferno in development environment to find the error.",m={ELEMENT:1,OPT_ELEMENT:2,TEXT:3,FRAGMENT:4,OPT_BLUEPRINT:5,COMPONENT:6,PLACEHOLDER:7},S="Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.",g=new Map,y=function(t,n){this.props=t||{},this.state={},this.refs={},this._processingSetState=!1,this._blockRender=!1,this._blockSetState=!1,this._deferSetState=!1,this._pendingSetState=!1,this._pendingState={},this._lastInput=null,this._vComponent=null,this._unmounted=!0,this.context=n||{},this._childContext=null,this._patch=null,this._isSVG=!1,this._componentToDOMNodeMap=null,this.componentDidMount||(this.componentDidMount=null)};y.prototype.render=function(){},y.prototype.forceUpdate=function(t){if(this._unmounted)throw Error(S);u(this,!0,t)},y.prototype.setState=function(t,n){if(this._unmounted)throw Error(S);this._blockSetState===!1?s(this,t,n):i()},y.prototype.componentWillMount=function(){},y.prototype.componentWillUnmount=function(){},y.prototype.componentDidUpdate=function(){},y.prototype.shouldComponentUpdate=function(){return!0},y.prototype.componentWillReceiveProps=function(){},y.prototype.componentWillUpdate=function(){},y.prototype.getChildContext=function(){},y.prototype._updateComponent=function(n,e,o,i,r,p){if(this._unmounted===!0)throw new Error("You can't update an unmounted component!");if(!t(i)&&t(i.children)&&(i.children=o.children),o!==i||n!==e||p){o!==i&&(this._blockRender=!0,this.componentWillReceiveProps(i,r),this._blockRender=!1,this._pendingSetState&&(e=Object.assign({},e,this._pendingState),this._pendingSetState=!1,this._pendingState={}));var s=this.shouldComponentUpdate(i,e,r);if(s!==!1||p)return this._blockSetState=!0,this.componentWillUpdate(i,e,r),this._blockSetState=!1,this.props=i,this.state=e,this.context=r,this.render(i,r)}return f};var v={constructor:1,render:1,shouldComponentUpdate:1,componentWillRecieveProps:1,componentWillUpdate:1,componentDidUpdate:1,componentWillMount:1,componentDidMount:1,componentWillUnmount:1,componentDidUnmount:1};return l});
