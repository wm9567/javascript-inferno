!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.InfernoCreateClass=n()}(this,function(){"use strict";function t(t){return e(t)||n(t)}function n(t){return null===t}function e(t){return void 0===t}function o(t){throw t||(t=S),new Error("Inferno Error: "+t)}function i(t,n){t&&console.error(n)}function r(){return new g}function p(){return document.activeElement}function s(t){t!==document.body&&document.activeElement!==t&&t.focus()}function u(t,n,e){for(var o in n)t._pendingState[o]=n[o];t._pendingSetState?(t.state=Object.assign({},t.state,t._pendingState),t._pendingState={}):(t._pendingSetState=!0,c(t,!1,e))}function c(n,e,o){if((!n._deferSetState||e)&&!n._blockRender){n._pendingSetState=!1;var i=n._pendingState,u=n.state,c=Object.assign({},u,i),d=n.props;n._pendingState={};var a=n._updateComponent(u,c,d,d,e);a===_?a=n._lastInput:t(a)&&(a=r());var l=n._lastInput,h=l._dom.parentNode,m=p(),S=new f;n._patch(l,a,h,S,n.context,n,null),n._lastInput=a,n._vComponent._dom=a._dom,n._componentToDOMNodeMap.set(n,a.dom),n.componentDidUpdate(d,u),S.trigger(),t(o)||o(),s(m)}}function d(){}function a(n,e,o){for(var i in e)o!==!0&&t(e[i])||(n[i]=e[i]);return n}function l(t){for(var n in t){var e=t[n];"function"!=typeof e||e.__bound||b.hasOwnProperty(n)||((t[n]=e.bind(t)).__bound=!0)}}function h(t){function n(n){a(this,t),E.call(this,n),l(this),this.getInitialState&&(this.state=this.getInitialState())}return d.prototype=E.prototype,n.prototype=new d,n.prototype.constructor=n,n.displayName=t.displayName||"Component",n}var f=function(){this._listeners=[]};f.prototype.addListener=function(t){this._listeners.push(t)},f.prototype.trigger=function(){for(var t=this,n=0;n<this._listeners.length;n++)t._listeners[n]()};var m=function(){};i((m.name||m.toString()).indexOf("testFn")!==-1,"It looks like you're using a minified copy of the development build of Inferno. When deploying Inferno apps to production, make sure to use the production build which skips development warnings and is faster. See http://infernojs.org for more details.");var _="NO_OP",S="a runtime error occured! Use Inferno in development environment to find the error.",y={ELEMENT:0,COMPONENT:1,TEMPLATE:2,TEXT:3,PLACEHOLDER:4,FRAGMENT:5,VARIABLE:6},g=function(){this._type=y.PLACEHOLDER,this._dom=null},v="Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.",E=function(t,n){this.props=t||{},this.state={},this.refs={},this._blockRender=!1,this._blockSetState=!1,this._deferSetState=!1,this._pendingSetState=!1,this._pendingState={},this._lastInput=null,this._vComponent=null,this._unmounted=!0,this.context=n||{},this._patch=null,this._parentComponent=null,this._componentToDOMNodeMap=null,this.componentDidMount||(this.componentDidMount=null)};E.prototype.render=function(){},E.prototype.forceUpdate=function(t){if(this._unmounted)throw Error(v);c(this,!0,t)},E.prototype.setState=function(t,n){if(this._unmounted)throw Error(v);this._blockSetState===!1?u(this,t,n):o()},E.prototype.componentWillMount=function(){},E.prototype.componentWillUnmount=function(){},E.prototype.componentDidUpdate=function(){},E.prototype.shouldComponentUpdate=function(){return!0},E.prototype.componentWillReceiveProps=function(){},E.prototype.componentWillUpdate=function(){},E.prototype.getChildContext=function(){},E.prototype._updateComponent=function(n,e,o,i,r){if(this._unmounted===!0)return this._unmounted=!1,_;if(!t(i)&&t(i.children)&&(i.children=o.children),o!==i||n!==e||r){o!==i&&(this._blockRender=!0,this.componentWillReceiveProps(i),this._blockRender=!1,this._pendingSetState&&(e=Object.assign({},e,this._pendingState),this._pendingSetState=!1,this._pendingState={}));var p=this.shouldComponentUpdate(i,e);if(p!==!1||r)return this._blockSetState=!0,this.componentWillUpdate(i,e),this._blockSetState=!1,this.props=i,this.state=e,this.render()}return _};var b={constructor:1,render:1,shouldComponentUpdate:1,componentWillRecieveProps:1,componentWillUpdate:1,componentDidUpdate:1,componentWillMount:1,componentDidMount:1,componentWillUnmount:1,componentDidUnmount:1};return h});