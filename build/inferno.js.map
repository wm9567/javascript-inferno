{"version":3,"sources":["src/inferno.js"],"names":[],"mappings":"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","file":"src/inferno.js","sourcesContent":["\"use strict\";\n\nvar t7 = require(\"../t7\");\n\nvar supportsTextContent = ('textContent' in document);\n\nvar isBrowser = false;\n\nif (typeof window != \"undefined\") {\n  isBrowser = true;\n}\n\nvar events = {\n  \"onClick\": \"click\"\n};\n\nvar events = {\n  \"onClick\": \"click\"\n};\n\nvar userAgent = navigator.userAgent,\n    isWebKit = userAgent.indexOf('WebKit') !== -1,\n    isFirefox = userAgent.indexOf('Firefox') !== -1,\n    isTrident = userAgent.indexOf('Trident') !== -1;\n\nvar version = \"0.2.2\";\n\nvar recycledFragments = {};\nvar rootlisteners = null;\nvar initialisedListeners = false;\n\nfunction addRootDomEventListerners() {\n  initialisedListeners = true;\n  if(rootlisteners !== null) {\n    document.addEventListener(\"click\", function(e) {\n      for(var i = 0; i < rootlisteners.click.length; i = i + 1 | 0) {\n        if(rootlisteners.click[i].target === e.target) {\n          rootlisteners.click[i].callback.call(rootlisteners.click[i].component || null, e);\n          //Let's take this out for now\n          //listeners.click[i].component.forceUpdate();\n        }\n      }\n    });\n  }\n};\n\nvar Inferno = {};\n\nInferno.Type = {\n  TEXT: 0,\n  TEXT_DIRECT: 1,\n  FRAGMENT: 2,\n  LIST: 3,\n  FRAGMENT_REPLACE: 4,\n  LIST_REPLACE: 5\n};\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\nfunction isArray(value) {\n  return value instanceof Array;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nclass Component {\n  constructor(props) {\n    this.props = props;\n    this.state = {};\n  }\n  render() {}\n  forceUpdate() {}\n  setState(newStateItems) {\n    for(var stateItem in newStateItems) {\n      this.state[stateItem] = newStateItems[stateItem];\n    }\n    this.forceUpdate();\n  }\n  replaceState(newState) {\n    this.state = newSate;\n    this.forceUpdate();\n  }\n}\n\nInferno.Component = Component;\n\nInferno.dom = {};\n\nInferno.dom.createElement = function(tag) {\n  if(isBrowser) {\n    return document.createElement(tag);\n  }\n};\n\nInferno.dom.createText = function(text) {\n  if(isBrowser) {\n    return document.createTextNode(text);\n  }\n};\n\nInferno.dom.createEmpty = function(text) {\n  if(isBrowser) {\n    return document.createTextNode(\"\");\n  }\n};\n\nInferno.dom.addAttributes = function(node, attrs, component) {\n  var attrName, attrVal;\n  for (attrName in attrs) {\n    attrVal = attrs[attrName];\n    switch (attrName) {\n      case \"class\":\n      case \"className\":\n        node.className = attrVal;\n        break;\n      default:\n        node[attrName] = attrVal;\n    }\n  }\n};\n\nInferno.dom.createFragment = function() {\n  if(isBrowser) {\n    return document.createDocumentFragment();\n  }\n};\n\nInferno.unmountComponentAtNode = function(dom) {\n  var context = getContext(dom);\n  if(context !== null) {\n    removeFragment(context, dom, context.fragment);\n    recycleFragments(context);\n    removeContext(dom);\n  }\n};\n\nfunction recycleFragments(context) {\n  var i = 0;\n  for (var type in context.toRecycle) {\n    for (i = 0; i < context.toRecycle[type].length; i++) {\n      if(!recycledFragments[type]) {\n        recycledFragments[type] = [];\n      }\n      recycledFragments[type].push(context.toRecycle[type][i]);\n    }\n  }\n}\n\nfunction getRecycledFragment(templateKey) {\n  var fragments = recycledFragments[templateKey];\n  if(!fragments || fragments.length === 0) {\n    return null;\n  }\n  return fragments.pop();\n}\n\nfunction attachFragmentList(context, list, parentDom, component) {\n  for(var i = 0; i < list.length; i++) {\n    attachFragment(context, list[i], parentDom, component);\n  }\n}\n\nfunction updateFragmentList(context, oldList, list, parentDom, component, outerNextFragment) {\n  var oldListLength = oldList.length;\n  var listLength = list.length;\n\n  if(listLength === 0) {\n    removeFragments(context, parentDom, oldList, 0, oldListLength);\n    return;\n  } else if (oldListLength === 0) {\n    attachFragmentList(context, list, parentDom, component);\n    return;\n  }\n\n  var oldEndIndex = oldListLength - 1;\n  var endIndex = listLength - 1;\n  var oldStartIndex = 0, startIndex = 0;\n  var successful = true;\n  var nextItem;\n  var oldItem, item;\n\n  outer: while (successful && oldStartIndex <= oldEndIndex && startIndex <= endIndex) {\n    successful = false;\n    var oldStartItem, oldEndItem, startItem, endItem, doUpdate;\n\n    oldStartItem = oldList[oldStartIndex];\n    startItem = list[startIndex];\n    while (oldStartItem.key === startItem.key) {\n      updateFragment(context, oldStartItem, startItem, parentDom, component);\n      oldStartIndex++; startIndex++;\n      if (oldStartIndex > oldEndIndex || startIndex > endIndex) {\n        break outer;\n      }\n      oldStartItem = oldList[oldStartIndex];\n      startItem = list[startIndex];\n      successful = true;\n    }\n    oldEndItem = oldList[oldEndIndex];\n    endItem = list[endIndex];\n    while (oldEndItem.key === endItem.key) {\n      updateFragment(context, oldEndItem, endItem, parentDom, component);\n      oldEndIndex--; endIndex--;\n      if (oldStartIndex > oldEndIndex || startIndex > endIndex) {\n        break outer;\n      }\n      oldEndItem = oldList[oldEndIndex];\n      endItem = list[endIndex];\n      successful = true;\n    }\n    while (oldStartItem.key === endItem.key) {\n      nextItem = (endIndex + 1 < listLength) ? list[endIndex + 1] : outerNextFragment;\n      updateFragment(context, oldStartItem, endItem, parentDom, component);\n      moveFragment(parentDom, endItem, nextItem)\n      oldStartIndex++; endIndex--;\n      if (oldStartIndex > oldEndIndex || startIndex > endIndex) {\n        break outer;\n      }\n      oldStartItem = oldList[oldStartIndex];\n      endItem = list[endIndex];\n      successful = true;\n    }\n    while (oldEndItem.key === startItem.key) {\n      nextItem = (oldStartIndex < oldListLength) ? oldList[oldStartIndex] : outerNextFragment;\n      updateFragment(context, oldEndItem, startItem, parentDom, component);\n      moveFragment(parentDom, startItem, nextItem)\n      oldEndIndex--; startIndex++;\n      if (oldStartIndex > oldEndIndex || startIndex > endIndex) {\n        break outer;\n      }\n      oldEndItem = oldList[oldEndIndex];\n      startItem = list[startIndex];\n      successful = true;\n    }\n  }\n  if (oldStartIndex > oldEndIndex) {\n    nextItem = (endIndex + 1 < listLength) ? list[endIndex + 1] : outerNextFragment;\n    for (i = startIndex; i <= endIndex; i++) {\n      item = list[i];\n      attachFragment(context, item, parentDom, component, nextItem);\n    }\n  } else if (startIndex > endIndex) {\n    removeFragments(context, parentDom, oldList, oldStartIndex, oldEndIndex + 1);\n  } else {\n    var i, oldNextItem = (oldEndIndex + 1 >= oldListLength ? null : oldList[oldEndIndex + 1]);\n    var oldListMap = {};\n    for (i = oldEndIndex; i >= oldStartIndex; i--) {\n      oldItem = oldList[i];\n      oldItem.next = oldNextItem;\n      oldListMap[oldItem.key] = oldItem;\n      oldNextItem = oldItem;\n    }\n    nextItem = (endIndex + 1 < listLength) ? list[endIndex + 1] : outerNextFragment;\n    for (i = endIndex; i >= startIndex; i--) {\n      item = list[i];\n      var key = item.key;\n      oldItem = oldListMap[key];\n      if (oldItem) {\n        oldListMap[key] = null;\n        oldNextItem = oldItem.next;\n        updateFragment(context, oldItem, item, parentDom, component);\n        if (parentDom.nextSibling != (nextItem && nextItem.dom)) {\n          moveFragment(parentDom, item, nextItem);\n        }\n      } else {\n        attachFragment(context, item, parentDom, component, nextItem);\n      }\n      nextItem = item;\n    }\n    for (i = oldStartIndex; i <= oldEndIndex; i++) {\n      oldItem = oldList[i];\n      if (oldListMap[oldItem.key] !== null) {\n        removeFragment(context, parentDom, oldItem);\n      }\n    }\n  }\n}\n\nfunction updateFragment(context, oldFragment, fragment, parentDom, component) {\n  if(oldFragment.template !== fragment.template) {\n    attachFragment(context, fragment, parentDom, component, oldFragment, true);\n  } else {\n    var fragmentComponent = oldFragment.component;\n\n    if (fragmentComponent) {\n      fragmentComponent.props = fragment.props;\n      fragmentComponent.forceUpdate();\n      fragment.component = fragmentComponent;\n      return;\n    }\n\n    var element, template, valuesLength = oldFragment.valuesLength;\n\n    fragment.dom = oldFragment.dom;\n    fragment.valuesLength = valuesLength;\n\n    for(var i = 0; i < valuesLength; i++) {\n      template = oldFragment['$t' + i];\n      element =  oldFragment['$e' + i];\n      fragment['$e' + i] = element;\n      fragment['$t' + i] = template;\n\n      if(oldFragment['$v' + i] !== fragment['$v' + i]) {\n        switch(template) {\n          case Inferno.Type.LIST:\n            updateFragmentList(context, oldFragment['$v' + i], fragment['$v' + i], element, component);\n            break;\n          case Inferno.Type.TEXT:\n            element.firstChild.nodeValue = fragment['$v' + i];\n            break;\n          case Inferno.Type.TEXT_DIRECT:\n            element.nodeValue = fragment['$v' + i];\n            break;\n        }\n      }\n    }\n  }\n}\n\nfunction attachFragment(context, fragment, parentDom, component, nextFragment, replace) {\n  var fragmentComponent = fragment.component;\n\n  if (fragmentComponent) {\n    if (typeof fragmentComponent === \"function\") {\n      fragmentComponent = fragment.component = new fragmentComponent(fragment.props);\n      fragmentComponent.context = null;\n      fragmentComponent.forceUpdate = Inferno.render.bind(null, fragmentComponent.render.bind(fragmentComponent), parentDom, fragmentComponent);\n      fragmentComponent.forceUpdate();\n    }\n    return;\n  }\n\n  var recycledFragment = null;\n  var template = fragment.template;\n  var templateKey = template.key;\n\n  if(context.shouldRecycle === true) {\n    recycledFragment = getRecycledFragment(templateKey);\n  }\n\n  if(recycledFragment !== null) {\n    updateFragment(context, recycledFragment, fragment, parentDom, component);\n  } else {\n    template(fragment, component);\n    var valuesLength = fragment.valuesLength;\n    for(var i = 0; i < valuesLength; i++) {\n      switch(fragment[\"$t\" + i]) {\n        case Inferno.Type.LIST:\n          attachFragmentList(context, fragment[\"$v\" + i], fragment[\"$e\" + i], component);\n          break;\n        case Inferno.Type.LIST_REPLACE:\n          debugger;\n          break;\n        case Inferno.Type.FRAGMENT:\n          debugger;\n          break;\n        case Inferno.Type.FRAGMENT_REPLACE:\n          attachFragment(context, fragment[\"$v\" + i], parentDom,  component, fragment[\"$e\" + i], true);\n          break;\n      }\n    }\n  }\n\n  insertFragment(context, parentDom, fragment.dom, nextFragment, replace);\n}\n\nvar contexts = [];\n\nfunction removeContext(dom) {\n  for(var i = 0; i < contexts.length; i++) {\n    if (contexts[i].dom === dom) {\n      contexts.splice(i, 1);\n      return;\n    }\n  }\n}\n\nfunction getContext(dom) {\n  for(var i = 0; i < contexts.length; i++) {\n    if (contexts[i].dom === dom) {\n      return contexts[i];\n    }\n  }\n  return null;\n}\n\nInferno.render = function (fragment, dom, component) {\n  var context, generatedFragment;\n  if (component === undefined) {\n    context = getContext(dom);\n    if (context === null) {\n      context = {\n        toRecycle: {},\n        fragment: fragment,\n        dom: dom,\n        shouldRecycle: true\n      };\n      attachFragment(context, fragment, dom, component);\n      contexts.push(context);\n    } else {\n      updateFragment(context, context.fragment, fragment, dom, component, false);\n      context.fragment = fragment;\n    }\n  } else {\n    if(component.context === null) {\n      generatedFragment = fragment();\n      context = component.context = {\n        toRecycle: {},\n        fragment: generatedFragment,\n        dom: dom,\n        shouldRecycle: true\n      };\n      attachFragment(context, generatedFragment, dom, component);\n    } else {\n      generatedFragment = fragment();\n      context = component.context;\n      updateFragment(context, context.fragment, generatedFragment, dom, component, false);\n      context.fragment = generatedFragment;\n    }\n  }\n};\n\nfunction moveFragment(parentDom, item, nextItem) {\n  var domItem = item.dom,\n      domRefItem = nextItem && nextItem.dom;\n\n  if (domItem !== domRefItem) {\n    if (domRefItem) {\n      parentDom.insertBefore(domItem, domRefItem);\n    } else {\n      parentDom.appendChild(domItem);\n    }\n  }\n}\n\nfunction isInputProperty(tag, attrName) {\n  switch (tag) {\n    case \"input\":\n      return attrName === \"value\" || attrName === \"checked\";\n    case \"textarea\":\n      return attrName === \"value\";\n    case \"select\":\n      return attrName === \"value\" || attrName === \"selectedIndex\";\n    case \"option\":\n      return attrName === \"selected\";\n  }\n};\n\nfunction addEventListener(parentDom, component, listenerName, callback) {\n  rootlisteners[events[listenerName]].push({\n    target: parentDom,\n    callback: callback,\n    component: component\n  });\n}\n\nfunction clearEventListeners(parentDom, component, listenerName) {\n  var listeners = rootlisteners[events[listenerName]];\n  var index = 0;\n  while (index < listeners.length) {\n    if (listeners[index].target === parentDom) {\n      listeners.splice(index, 1);\n      index = 0;\n    }\n    index++;\n  }\n}\n\nfunction updateAttributes(parentDom, tag, component, attrs, oldAttrs) {\n  var changes, attrName;\n  if (attrs) {\n    for (attrName in attrs) {\n      var attrValue = attrs[attrName];\n      if (oldAttrs && oldAttrs[attrName] === attrs[attrName]) {\n        continue;\n      }\n      if (events[attrName] != null) {\n        clearEventListeners(parentDom, component, attrName);\n        addEventListener(parentDom, component, attrName, attrValue);\n        continue;\n      }\n      if (attrName === 'style') {\n        var oldAttrValue = oldAttrs && oldAttrs[attrName];\n        if (oldAttrValue !== attrValue) {\n          updateStyle(domElement, oldAttrValue, attrs, attrValue);\n        }\n      } else if (isInputProperty(tag, attrName)) {\n        if (parentDom[attrName] !== attrValue) {\n          parentDom[attrName] = attrValue;\n        }\n      } else if (!oldAttrs || oldAttrs[attrName] !== attrValue) {\n        if (attrName === 'class') {\n          parentDom.className = attrValue;\n        } else {\n          updateAttribute(parentDom, attrName, attrValue);\n        }\n      }\n    }\n  }\n  if (oldAttrs) {\n    for (attrName in oldAttrs) {\n      if (!attrs || attrs[attrName] === undefined) {\n        if (attrName === 'class') {\n          parentDom.className = '';\n        } else if (!isInputProperty(tag, attrName)) {\n          parentDom.removeAttribute(attrName);\n        }\n      }\n    }\n  }\n  return changes;\n}\n\nfunction insertFragment(context, parentDom, domNode, nextFragment, replace) {\n  var noDestroy = false;\n  if (nextFragment) {\n    var domNextFragment = nextFragment.dom;\n    if(!domNextFragment) {\n      domNextFragment = nextFragment;\n      parentDom = domNextFragment.parentNode;\n      noDestroy = true;\n    }\n    if (replace) {\n      if(noDestroy === false) {\n        destroyFragment(context, nextFragment);\n      }\n      parentDom.replaceChild(domNode, domNextFragment);\n    } else {\n      parentDom.insertBefore(domNode, domNextFragment);\n    }\n  } else {\n    parentDom.appendChild(domNode);\n  }\n}\n\nfunction removeFragments(context, parentDom, fragments, i, to) {\n  for (; i < to; i++) {\n    removeFragment(context, parentDom, fragments[i]);\n  }\n}\n\nfunction removeFragment(context, parentDom, item) {\n  var domItem = item.dom;\n  destroyFragment(context, item);\n  parentDom.removeChild(domItem);\n}\n\nfunction destroyFragment(context, fragment) {\n  var templateKey = fragment.template.key;\n  if(context.shouldRecycle === true) {\n    var toRecycleForKey = context.toRecycle[templateKey];\n    if (!toRecycleForKey) {\n    \tcontext.toRecycle[templateKey] = toRecycleForKey = [];\n    }\n    toRecycleForKey.push(fragment)\n  }\n}\n\nfunction updateAttribute(parentDom, name, value) {\n  if (value === false || value == null) {\n    parentDom.removeAttribute(name);\n  } else {\n    if (value === true) {\n      value = \"\";\n    }\n    var colonIndex = name.indexOf(\":\"),\n        ns;\n    if (colonIndex !== -1) {\n      var prefix = name.substr(0, colonIndex);\n      switch (prefix) {\n        case \"xlink\":\n          ns = \"http://www.w3.org/1999/xlink\";\n          break;\n      }\n    }\n    parentDom.setAttribute(name, value);\n  }\n};\n\nfunction setTextContent(parentDom, text, update) {\n  if (text) {\n    if (supportsTextContent) {\n      parentDom.textContent = text;\n    } else {\n      parentDom.innerText = text;\n    }\n  } else {\n    if (update) {\n      while (domElement.firstChild) {\n        parentDom.removeChild(parentDom.firstChild);\n      }\n    }\n    parentDom.appendChild(emptyTextNode());\n  }\n};\n\nmodule.exports = Inferno;\n"]}